#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbpetlover")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttblImage(tblImage instance);
  partial void UpdatetblImage(tblImage instance);
  partial void DeletetblImage(tblImage instance);
  partial void InserttblAdmin(tblAdmin instance);
  partial void UpdatetblAdmin(tblAdmin instance);
  partial void DeletetblAdmin(tblAdmin instance);
  partial void InserttblAction(tblAction instance);
  partial void UpdatetblAction(tblAction instance);
  partial void DeletetblAction(tblAction instance);
  partial void InserttblAlbum(tblAlbum instance);
  partial void UpdatetblAlbum(tblAlbum instance);
  partial void DeletetblAlbum(tblAlbum instance);
  partial void InserttblEvent(tblEvent instance);
  partial void UpdatetblEvent(tblEvent instance);
  partial void DeletetblEvent(tblEvent instance);
  partial void InserttblPost(tblPost instance);
  partial void UpdatetblPost(tblPost instance);
  partial void DeletetblPost(tblPost instance);
  partial void InserttblLike(tblLike instance);
  partial void UpdatetblLike(tblLike instance);
  partial void DeletetblLike(tblLike instance);
  partial void InserttblComment(tblComment instance);
  partial void UpdatetblComment(tblComment instance);
  partial void DeletetblComment(tblComment instance);
  partial void InserttblPermission(tblPermission instance);
  partial void UpdatetblPermission(tblPermission instance);
  partial void DeletetblPermission(tblPermission instance);
  partial void InserttblCategory(tblCategory instance);
  partial void UpdatetblCategory(tblCategory instance);
  partial void DeletetblCategory(tblCategory instance);
  partial void InserttblInquiry(tblInquiry instance);
  partial void UpdatetblInquiry(tblInquiry instance);
  partial void DeletetblInquiry(tblInquiry instance);
  partial void InserttblCMSPage(tblCMSPage instance);
  partial void UpdatetblCMSPage(tblCMSPage instance);
  partial void DeletetblCMSPage(tblCMSPage instance);
  partial void InserttblPet(tblPet instance);
  partial void UpdatetblPet(tblPet instance);
  partial void DeletetblPet(tblPet instance);
  partial void InserttblPetType(tblPetType instance);
  partial void UpdatetblPetType(tblPetType instance);
  partial void DeletetblPetType(tblPetType instance);
  partial void InserttblCart(tblCart instance);
  partial void UpdatetblCart(tblCart instance);
  partial void DeletetblCart(tblCart instance);
  partial void InserttblUser(tblUser instance);
  partial void UpdatetblUser(tblUser instance);
  partial void DeletetblUser(tblUser instance);
  partial void InserttblOrder(tblOrder instance);
  partial void UpdatetblOrder(tblOrder instance);
  partial void DeletetblOrder(tblOrder instance);
  partial void InsertCountryMaster(CountryMaster instance);
  partial void UpdateCountryMaster(CountryMaster instance);
  partial void DeleteCountryMaster(CountryMaster instance);
  partial void InsertStateMaster(StateMaster instance);
  partial void UpdateStateMaster(StateMaster instance);
  partial void DeleteStateMaster(StateMaster instance);
  partial void InsertCityMaster(CityMaster instance);
  partial void UpdateCityMaster(CityMaster instance);
  partial void DeleteCityMaster(CityMaster instance);
  partial void InserttblAddress(tblAddress instance);
  partial void UpdatetblAddress(tblAddress instance);
  partial void DeletetblAddress(tblAddress instance);
  partial void InserttblNewsLetter(tblNewsLetter instance);
  partial void UpdatetblNewsLetter(tblNewsLetter instance);
  partial void DeletetblNewsLetter(tblNewsLetter instance);
  partial void InserttblBusiness(tblBusiness instance);
  partial void UpdatetblBusiness(tblBusiness instance);
  partial void DeletetblBusiness(tblBusiness instance);
  partial void InserttblOrderDetail(tblOrderDetail instance);
  partial void UpdatetblOrderDetail(tblOrderDetail instance);
  partial void DeletetblOrderDetail(tblOrderDetail instance);
  partial void InserttblEventXUser(tblEventXUser instance);
  partial void UpdatetblEventXUser(tblEventXUser instance);
  partial void DeletetblEventXUser(tblEventXUser instance);
  partial void InserttblProduct(tblProduct instance);
  partial void UpdatetblProduct(tblProduct instance);
  partial void DeletetblProduct(tblProduct instance);
  partial void InserttblRating(tblRating instance);
  partial void UpdatetblRating(tblRating instance);
  partial void DeletetblRating(tblRating instance);
  partial void InserttblError(tblError instance);
  partial void UpdatetblError(tblError instance);
  partial void DeletetblError(tblError instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbpetloverConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tblImage> tblImages
	{
		get
		{
			return this.GetTable<tblImage>();
		}
	}
	
	public System.Data.Linq.Table<tblAdmin> tblAdmins
	{
		get
		{
			return this.GetTable<tblAdmin>();
		}
	}
	
	public System.Data.Linq.Table<tblAction> tblActions
	{
		get
		{
			return this.GetTable<tblAction>();
		}
	}
	
	public System.Data.Linq.Table<tblAlbum> tblAlbums
	{
		get
		{
			return this.GetTable<tblAlbum>();
		}
	}
	
	public System.Data.Linq.Table<tblEvent> tblEvents
	{
		get
		{
			return this.GetTable<tblEvent>();
		}
	}
	
	public System.Data.Linq.Table<tblPost> tblPosts
	{
		get
		{
			return this.GetTable<tblPost>();
		}
	}
	
	public System.Data.Linq.Table<tblLike> tblLikes
	{
		get
		{
			return this.GetTable<tblLike>();
		}
	}
	
	public System.Data.Linq.Table<tblComment> tblComments
	{
		get
		{
			return this.GetTable<tblComment>();
		}
	}
	
	public System.Data.Linq.Table<tblPermission> tblPermissions
	{
		get
		{
			return this.GetTable<tblPermission>();
		}
	}
	
	public System.Data.Linq.Table<tblCategory> tblCategories
	{
		get
		{
			return this.GetTable<tblCategory>();
		}
	}
	
	public System.Data.Linq.Table<tblInquiry> tblInquiries
	{
		get
		{
			return this.GetTable<tblInquiry>();
		}
	}
	
	public System.Data.Linq.Table<tblCMSPage> tblCMSPages
	{
		get
		{
			return this.GetTable<tblCMSPage>();
		}
	}
	
	public System.Data.Linq.Table<tblPet> tblPets
	{
		get
		{
			return this.GetTable<tblPet>();
		}
	}
	
	public System.Data.Linq.Table<tblPetType> tblPetTypes
	{
		get
		{
			return this.GetTable<tblPetType>();
		}
	}
	
	public System.Data.Linq.Table<tblCart> tblCarts
	{
		get
		{
			return this.GetTable<tblCart>();
		}
	}
	
	public System.Data.Linq.Table<tblUser> tblUsers
	{
		get
		{
			return this.GetTable<tblUser>();
		}
	}
	
	public System.Data.Linq.Table<tblOrder> tblOrders
	{
		get
		{
			return this.GetTable<tblOrder>();
		}
	}
	
	public System.Data.Linq.Table<CountryMaster> CountryMasters
	{
		get
		{
			return this.GetTable<CountryMaster>();
		}
	}
	
	public System.Data.Linq.Table<StateMaster> StateMasters
	{
		get
		{
			return this.GetTable<StateMaster>();
		}
	}
	
	public System.Data.Linq.Table<CityMaster> CityMasters
	{
		get
		{
			return this.GetTable<CityMaster>();
		}
	}
	
	public System.Data.Linq.Table<tblAddress> tblAddresses
	{
		get
		{
			return this.GetTable<tblAddress>();
		}
	}
	
	public System.Data.Linq.Table<tblNewsLetter> tblNewsLetters
	{
		get
		{
			return this.GetTable<tblNewsLetter>();
		}
	}
	
	public System.Data.Linq.Table<tblBusiness> tblBusinesses
	{
		get
		{
			return this.GetTable<tblBusiness>();
		}
	}
	
	public System.Data.Linq.Table<tblOrderDetail> tblOrderDetails
	{
		get
		{
			return this.GetTable<tblOrderDetail>();
		}
	}
	
	public System.Data.Linq.Table<tblEventXUser> tblEventXUsers
	{
		get
		{
			return this.GetTable<tblEventXUser>();
		}
	}
	
	public System.Data.Linq.Table<tblProduct> tblProducts
	{
		get
		{
			return this.GetTable<tblProduct>();
		}
	}
	
	public System.Data.Linq.Table<tblRating> tblRatings
	{
		get
		{
			return this.GetTable<tblRating>();
		}
	}
	
	public System.Data.Linq.Table<tblError> tblErrors
	{
		get
		{
			return this.GetTable<tblError>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblImages")]
public partial class tblImage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ImageId;
	
	private string _Url;
	
	private bool _IsActive;
	
	private bool _IsDefault;
	
	private System.DateTime _CreatedOn;
	
	private System.Nullable<int> _AlbumId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIdChanging(int value);
    partial void OnImageIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnAlbumIdChanging(System.Nullable<int> value);
    partial void OnAlbumIdChanged();
    #endregion
	
	public tblImage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ImageId
	{
		get
		{
			return this._ImageId;
		}
		set
		{
			if ((this._ImageId != value))
			{
				this.OnImageIdChanging(value);
				this.SendPropertyChanging();
				this._ImageId = value;
				this.SendPropertyChanged("ImageId");
				this.OnImageIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Url
	{
		get
		{
			return this._Url;
		}
		set
		{
			if ((this._Url != value))
			{
				this.OnUrlChanging(value);
				this.SendPropertyChanging();
				this._Url = value;
				this.SendPropertyChanged("Url");
				this.OnUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
	public bool IsDefault
	{
		get
		{
			return this._IsDefault;
		}
		set
		{
			if ((this._IsDefault != value))
			{
				this.OnIsDefaultChanging(value);
				this.SendPropertyChanging();
				this._IsDefault = value;
				this.SendPropertyChanged("IsDefault");
				this.OnIsDefaultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="Int")]
	public System.Nullable<int> AlbumId
	{
		get
		{
			return this._AlbumId;
		}
		set
		{
			if ((this._AlbumId != value))
			{
				this.OnAlbumIdChanging(value);
				this.SendPropertyChanging();
				this._AlbumId = value;
				this.SendPropertyChanged("AlbumId");
				this.OnAlbumIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAdmin")]
public partial class tblAdmin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AdminId;
	
	private string _FName;
	
	private string _MName;
	
	private string _LName;
	
	private string _Email;
	
	private string _Password;
	
	private string _ContactNo;
	
	private string _Image;
	
	private bool _IsSuper;
	
	private bool _IsActive;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.DateTime _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIdChanging(int value);
    partial void OnAdminIdChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnMNameChanging(string value);
    partial void OnMNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnIsSuperChanging(bool value);
    partial void OnIsSuperChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblAdmin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AdminId
	{
		get
		{
			return this._AdminId;
		}
		set
		{
			if ((this._AdminId != value))
			{
				this.OnAdminIdChanging(value);
				this.SendPropertyChanging();
				this._AdminId = value;
				this.SendPropertyChanged("AdminId");
				this.OnAdminIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string FName
	{
		get
		{
			return this._FName;
		}
		set
		{
			if ((this._FName != value))
			{
				this.OnFNameChanging(value);
				this.SendPropertyChanging();
				this._FName = value;
				this.SendPropertyChanged("FName");
				this.OnFNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string MName
	{
		get
		{
			return this._MName;
		}
		set
		{
			if ((this._MName != value))
			{
				this.OnMNameChanging(value);
				this.SendPropertyChanging();
				this._MName = value;
				this.SendPropertyChanged("MName");
				this.OnMNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LName
	{
		get
		{
			return this._LName;
		}
		set
		{
			if ((this._LName != value))
			{
				this.OnLNameChanging(value);
				this.SendPropertyChanging();
				this._LName = value;
				this.SendPropertyChanged("LName");
				this.OnLNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuper", DbType="Bit NOT NULL")]
	public bool IsSuper
	{
		get
		{
			return this._IsSuper;
		}
		set
		{
			if ((this._IsSuper != value))
			{
				this.OnIsSuperChanging(value);
				this.SendPropertyChanging();
				this._IsSuper = value;
				this.SendPropertyChanged("IsSuper");
				this.OnIsSuperChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAction")]
public partial class tblAction : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ActionId;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<int> _AdminId;
	
	private string _PageName;
	
	private string _Action;
	
	private string _MacAddress;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionIdChanging(int value);
    partial void OnActionIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnAdminIdChanging(System.Nullable<int> value);
    partial void OnAdminIdChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblAction()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ActionId
	{
		get
		{
			return this._ActionId;
		}
		set
		{
			if ((this._ActionId != value))
			{
				this.OnActionIdChanging(value);
				this.SendPropertyChanging();
				this._ActionId = value;
				this.SendPropertyChanged("ActionId");
				this.OnActionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", DbType="Int")]
	public System.Nullable<int> AdminId
	{
		get
		{
			return this._AdminId;
		}
		set
		{
			if ((this._AdminId != value))
			{
				this.OnAdminIdChanging(value);
				this.SendPropertyChanging();
				this._AdminId = value;
				this.SendPropertyChanged("AdminId");
				this.OnAdminIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="VarChar(50)")]
	public string PageName
	{
		get
		{
			return this._PageName;
		}
		set
		{
			if ((this._PageName != value))
			{
				this.OnPageNameChanging(value);
				this.SendPropertyChanging();
				this._PageName = value;
				this.SendPropertyChanged("PageName");
				this.OnPageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(50)")]
	public string Action
	{
		get
		{
			return this._Action;
		}
		set
		{
			if ((this._Action != value))
			{
				this.OnActionChanging(value);
				this.SendPropertyChanging();
				this._Action = value;
				this.SendPropertyChanged("Action");
				this.OnActionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="VarChar(MAX)")]
	public string MacAddress
	{
		get
		{
			return this._MacAddress;
		}
		set
		{
			if ((this._MacAddress != value))
			{
				this.OnMacAddressChanging(value);
				this.SendPropertyChanging();
				this._MacAddress = value;
				this.SendPropertyChanged("MacAddress");
				this.OnMacAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAlbum")]
public partial class tblAlbum : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AlbumId;
	
	private string _Name;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<bool> _IsVideo;
	
	private System.Nullable<bool> _IsImage;
	
	private System.Nullable<bool> _IsAudio;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIdChanging(int value);
    partial void OnAlbumIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnIsVideoChanging(System.Nullable<bool> value);
    partial void OnIsVideoChanged();
    partial void OnIsImageChanging(System.Nullable<bool> value);
    partial void OnIsImageChanged();
    partial void OnIsAudioChanging(System.Nullable<bool> value);
    partial void OnIsAudioChanged();
    #endregion
	
	public tblAlbum()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AlbumId
	{
		get
		{
			return this._AlbumId;
		}
		set
		{
			if ((this._AlbumId != value))
			{
				this.OnAlbumIdChanging(value);
				this.SendPropertyChanging();
				this._AlbumId = value;
				this.SendPropertyChanged("AlbumId");
				this.OnAlbumIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVideo", DbType="Bit")]
	public System.Nullable<bool> IsVideo
	{
		get
		{
			return this._IsVideo;
		}
		set
		{
			if ((this._IsVideo != value))
			{
				this.OnIsVideoChanging(value);
				this.SendPropertyChanging();
				this._IsVideo = value;
				this.SendPropertyChanged("IsVideo");
				this.OnIsVideoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImage", DbType="Bit")]
	public System.Nullable<bool> IsImage
	{
		get
		{
			return this._IsImage;
		}
		set
		{
			if ((this._IsImage != value))
			{
				this.OnIsImageChanging(value);
				this.SendPropertyChanging();
				this._IsImage = value;
				this.SendPropertyChanged("IsImage");
				this.OnIsImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAudio", DbType="Bit")]
	public System.Nullable<bool> IsAudio
	{
		get
		{
			return this._IsAudio;
		}
		set
		{
			if ((this._IsAudio != value))
			{
				this.OnIsAudioChanging(value);
				this.SendPropertyChanging();
				this._IsAudio = value;
				this.SendPropertyChanged("IsAudio");
				this.OnIsAudioChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEvent")]
public partial class tblEvent : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EventId;
	
	private System.Nullable<int> _AdminId;
	
	private string _EventName;
	
	private string _Details;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<int> _AlbumId;
	
	private System.Nullable<System.TimeSpan> _StartTime;
	
	private System.Nullable<System.TimeSpan> _EndTime;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(int value);
    partial void OnEventIdChanged();
    partial void OnAdminIdChanging(System.Nullable<int> value);
    partial void OnAdminIdChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnAlbumIdChanging(System.Nullable<int> value);
    partial void OnAlbumIdChanged();
    partial void OnStartTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnEndTimeChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
	
	public tblEvent()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EventId
	{
		get
		{
			return this._EventId;
		}
		set
		{
			if ((this._EventId != value))
			{
				this.OnEventIdChanging(value);
				this.SendPropertyChanging();
				this._EventId = value;
				this.SendPropertyChanged("EventId");
				this.OnEventIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", DbType="Int")]
	public System.Nullable<int> AdminId
	{
		get
		{
			return this._AdminId;
		}
		set
		{
			if ((this._AdminId != value))
			{
				this.OnAdminIdChanging(value);
				this.SendPropertyChanging();
				this._AdminId = value;
				this.SendPropertyChanged("AdminId");
				this.OnAdminIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(50)")]
	public string EventName
	{
		get
		{
			return this._EventName;
		}
		set
		{
			if ((this._EventName != value))
			{
				this.OnEventNameChanging(value);
				this.SendPropertyChanging();
				this._EventName = value;
				this.SendPropertyChanged("EventName");
				this.OnEventNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(MAX)")]
	public string Details
	{
		get
		{
			return this._Details;
		}
		set
		{
			if ((this._Details != value))
			{
				this.OnDetailsChanging(value);
				this.SendPropertyChanging();
				this._Details = value;
				this.SendPropertyChanged("Details");
				this.OnDetailsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="Int")]
	public System.Nullable<int> AlbumId
	{
		get
		{
			return this._AlbumId;
		}
		set
		{
			if ((this._AlbumId != value))
			{
				this.OnAlbumIdChanging(value);
				this.SendPropertyChanging();
				this._AlbumId = value;
				this.SendPropertyChanged("AlbumId");
				this.OnAlbumIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Time")]
	public System.Nullable<System.TimeSpan> StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="Time")]
	public System.Nullable<System.TimeSpan> EndTime
	{
		get
		{
			return this._EndTime;
		}
		set
		{
			if ((this._EndTime != value))
			{
				this.OnEndTimeChanging(value);
				this.SendPropertyChanging();
				this._EndTime = value;
				this.SendPropertyChanged("EndTime");
				this.OnEndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPost")]
public partial class tblPost : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PostId;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private string _Caption;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<int> _AlbumId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIdChanging(int value);
    partial void OnPostIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnAlbumIdChanging(System.Nullable<int> value);
    partial void OnAlbumIdChanged();
    #endregion
	
	public tblPost()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PostId
	{
		get
		{
			return this._PostId;
		}
		set
		{
			if ((this._PostId != value))
			{
				this.OnPostIdChanging(value);
				this.SendPropertyChanging();
				this._PostId = value;
				this.SendPropertyChanged("PostId");
				this.OnPostIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="VarChar(250)")]
	public string Caption
	{
		get
		{
			return this._Caption;
		}
		set
		{
			if ((this._Caption != value))
			{
				this.OnCaptionChanging(value);
				this.SendPropertyChanging();
				this._Caption = value;
				this.SendPropertyChanged("Caption");
				this.OnCaptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="Int")]
	public System.Nullable<int> AlbumId
	{
		get
		{
			return this._AlbumId;
		}
		set
		{
			if ((this._AlbumId != value))
			{
				this.OnAlbumIdChanging(value);
				this.SendPropertyChanging();
				this._AlbumId = value;
				this.SendPropertyChanged("AlbumId");
				this.OnAlbumIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLike")]
public partial class tblLike : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LikeId;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<int> _PostId;
	
	private System.Nullable<bool> _IsLike;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLikeIdChanging(int value);
    partial void OnLikeIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnPostIdChanging(System.Nullable<int> value);
    partial void OnPostIdChanged();
    partial void OnIsLikeChanging(System.Nullable<bool> value);
    partial void OnIsLikeChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblLike()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LikeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LikeId
	{
		get
		{
			return this._LikeId;
		}
		set
		{
			if ((this._LikeId != value))
			{
				this.OnLikeIdChanging(value);
				this.SendPropertyChanging();
				this._LikeId = value;
				this.SendPropertyChanged("LikeId");
				this.OnLikeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="Int")]
	public System.Nullable<int> PostId
	{
		get
		{
			return this._PostId;
		}
		set
		{
			if ((this._PostId != value))
			{
				this.OnPostIdChanging(value);
				this.SendPropertyChanging();
				this._PostId = value;
				this.SendPropertyChanged("PostId");
				this.OnPostIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLike", DbType="Bit")]
	public System.Nullable<bool> IsLike
	{
		get
		{
			return this._IsLike;
		}
		set
		{
			if ((this._IsLike != value))
			{
				this.OnIsLikeChanging(value);
				this.SendPropertyChanging();
				this._IsLike = value;
				this.SendPropertyChanged("IsLike");
				this.OnIsLikeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblComment")]
public partial class tblComment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CommentId;
	
	private string _Comment;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<int> _PostId;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIdChanging(int value);
    partial void OnCommentIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnPostIdChanging(System.Nullable<int> value);
    partial void OnPostIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblComment()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CommentId
	{
		get
		{
			return this._CommentId;
		}
		set
		{
			if ((this._CommentId != value))
			{
				this.OnCommentIdChanging(value);
				this.SendPropertyChanging();
				this._CommentId = value;
				this.SendPropertyChanged("CommentId");
				this.OnCommentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="Int")]
	public System.Nullable<int> PostId
	{
		get
		{
			return this._PostId;
		}
		set
		{
			if ((this._PostId != value))
			{
				this.OnPostIdChanging(value);
				this.SendPropertyChanging();
				this._PostId = value;
				this.SendPropertyChanged("PostId");
				this.OnPostIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPermission")]
public partial class tblPermission : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PermissionId;
	
	private System.Nullable<bool> _IsInsert;
	
	private System.Nullable<bool> _IsDelete;
	
	private System.Nullable<bool> _IsUpdate;
	
	private System.Nullable<int> _AdminId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnIsInsertChanging(System.Nullable<bool> value);
    partial void OnIsInsertChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnIsUpdateChanging(System.Nullable<bool> value);
    partial void OnIsUpdateChanged();
    partial void OnAdminIdChanging(System.Nullable<int> value);
    partial void OnAdminIdChanged();
    #endregion
	
	public tblPermission()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PermissionId
	{
		get
		{
			return this._PermissionId;
		}
		set
		{
			if ((this._PermissionId != value))
			{
				this.OnPermissionIdChanging(value);
				this.SendPropertyChanging();
				this._PermissionId = value;
				this.SendPropertyChanged("PermissionId");
				this.OnPermissionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInsert", DbType="Bit")]
	public System.Nullable<bool> IsInsert
	{
		get
		{
			return this._IsInsert;
		}
		set
		{
			if ((this._IsInsert != value))
			{
				this.OnIsInsertChanging(value);
				this.SendPropertyChanging();
				this._IsInsert = value;
				this.SendPropertyChanged("IsInsert");
				this.OnIsInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpdate", DbType="Bit")]
	public System.Nullable<bool> IsUpdate
	{
		get
		{
			return this._IsUpdate;
		}
		set
		{
			if ((this._IsUpdate != value))
			{
				this.OnIsUpdateChanging(value);
				this.SendPropertyChanging();
				this._IsUpdate = value;
				this.SendPropertyChanged("IsUpdate");
				this.OnIsUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", DbType="Int")]
	public System.Nullable<int> AdminId
	{
		get
		{
			return this._AdminId;
		}
		set
		{
			if ((this._AdminId != value))
			{
				this.OnAdminIdChanging(value);
				this.SendPropertyChanging();
				this._AdminId = value;
				this.SendPropertyChanged("AdminId");
				this.OnAdminIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCategory")]
public partial class tblCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CategoryId;
	
	private string _Name;
	
	private System.Nullable<int> _AlbumId;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private string _Desc;
	
	private System.Nullable<int> _ParentCategoryId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAlbumIdChanging(System.Nullable<int> value);
    partial void OnAlbumIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnParentCategoryIdChanging(System.Nullable<int> value);
    partial void OnParentCategoryIdChanged();
    #endregion
	
	public tblCategory()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CategoryId
	{
		get
		{
			return this._CategoryId;
		}
		set
		{
			if ((this._CategoryId != value))
			{
				this.OnCategoryIdChanging(value);
				this.SendPropertyChanging();
				this._CategoryId = value;
				this.SendPropertyChanged("CategoryId");
				this.OnCategoryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="Int")]
	public System.Nullable<int> AlbumId
	{
		get
		{
			return this._AlbumId;
		}
		set
		{
			if ((this._AlbumId != value))
			{
				this.OnAlbumIdChanging(value);
				this.SendPropertyChanging();
				this._AlbumId = value;
				this.SendPropertyChanged("AlbumId");
				this.OnAlbumIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="VarChar(MAX)")]
	public string Desc
	{
		get
		{
			return this._Desc;
		}
		set
		{
			if ((this._Desc != value))
			{
				this.OnDescChanging(value);
				this.SendPropertyChanging();
				this._Desc = value;
				this.SendPropertyChanged("Desc");
				this.OnDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCategoryId", DbType="Int")]
	public System.Nullable<int> ParentCategoryId
	{
		get
		{
			return this._ParentCategoryId;
		}
		set
		{
			if ((this._ParentCategoryId != value))
			{
				this.OnParentCategoryIdChanging(value);
				this.SendPropertyChanging();
				this._ParentCategoryId = value;
				this.SendPropertyChanged("ParentCategoryId");
				this.OnParentCategoryIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblInquiry")]
public partial class tblInquiry : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _InquiryId;
	
	private string _Name;
	
	private string _Email;
	
	private string _ContactNo;
	
	private string _Quary;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private string _Reply;
	
	private System.Nullable<System.DateTime> _RepliedOn;
	
	private System.Nullable<int> _ReplyBy;
	
	private System.Nullable<bool> _IsReplied;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInquiryIdChanging(int value);
    partial void OnInquiryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnQuaryChanging(string value);
    partial void OnQuaryChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnReplyChanging(string value);
    partial void OnReplyChanged();
    partial void OnRepliedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnRepliedOnChanged();
    partial void OnReplyByChanging(System.Nullable<int> value);
    partial void OnReplyByChanged();
    partial void OnIsRepliedChanging(System.Nullable<bool> value);
    partial void OnIsRepliedChanged();
    #endregion
	
	public tblInquiry()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InquiryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int InquiryId
	{
		get
		{
			return this._InquiryId;
		}
		set
		{
			if ((this._InquiryId != value))
			{
				this.OnInquiryIdChanging(value);
				this.SendPropertyChanging();
				this._InquiryId = value;
				this.SendPropertyChanged("InquiryId");
				this.OnInquiryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(MAX)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50)")]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quary", DbType="VarChar(MAX)")]
	public string Quary
	{
		get
		{
			return this._Quary;
		}
		set
		{
			if ((this._Quary != value))
			{
				this.OnQuaryChanging(value);
				this.SendPropertyChanging();
				this._Quary = value;
				this.SendPropertyChanged("Quary");
				this.OnQuaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reply", DbType="VarChar(MAX)")]
	public string Reply
	{
		get
		{
			return this._Reply;
		}
		set
		{
			if ((this._Reply != value))
			{
				this.OnReplyChanging(value);
				this.SendPropertyChanging();
				this._Reply = value;
				this.SendPropertyChanged("Reply");
				this.OnReplyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepliedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> RepliedOn
	{
		get
		{
			return this._RepliedOn;
		}
		set
		{
			if ((this._RepliedOn != value))
			{
				this.OnRepliedOnChanging(value);
				this.SendPropertyChanging();
				this._RepliedOn = value;
				this.SendPropertyChanged("RepliedOn");
				this.OnRepliedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyBy", DbType="Int")]
	public System.Nullable<int> ReplyBy
	{
		get
		{
			return this._ReplyBy;
		}
		set
		{
			if ((this._ReplyBy != value))
			{
				this.OnReplyByChanging(value);
				this.SendPropertyChanging();
				this._ReplyBy = value;
				this.SendPropertyChanged("ReplyBy");
				this.OnReplyByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplied", DbType="Bit")]
	public System.Nullable<bool> IsReplied
	{
		get
		{
			return this._IsReplied;
		}
		set
		{
			if ((this._IsReplied != value))
			{
				this.OnIsRepliedChanging(value);
				this.SendPropertyChanging();
				this._IsReplied = value;
				this.SendPropertyChanged("IsReplied");
				this.OnIsRepliedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCMSPage")]
public partial class tblCMSPage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CmsPageId;
	
	private string _Title;
	
	private string _Description;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.Nullable<int> _ModifiedBy;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<System.DateTime> _ModifiedOn;
	
	private System.Nullable<bool> _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCmsPageIdChanging(int value);
    partial void OnCmsPageIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblCMSPage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CmsPageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CmsPageId
	{
		get
		{
			return this._CmsPageId;
		}
		set
		{
			if ((this._CmsPageId != value))
			{
				this.OnCmsPageIdChanging(value);
				this.SendPropertyChanging();
				this._CmsPageId = value;
				this.SendPropertyChanged("CmsPageId");
				this.OnCmsPageIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
	public System.Nullable<int> ModifiedBy
	{
		get
		{
			return this._ModifiedBy;
		}
		set
		{
			if ((this._ModifiedBy != value))
			{
				this.OnModifiedByChanging(value);
				this.SendPropertyChanging();
				this._ModifiedBy = value;
				this.SendPropertyChanged("ModifiedBy");
				this.OnModifiedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedOn
	{
		get
		{
			return this._ModifiedOn;
		}
		set
		{
			if ((this._ModifiedOn != value))
			{
				this.OnModifiedOnChanging(value);
				this.SendPropertyChanging();
				this._ModifiedOn = value;
				this.SendPropertyChanged("ModifiedOn");
				this.OnModifiedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPet")]
public partial class tblPet : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PetId;
	
	private System.Nullable<int> _PetTypeId;
	
	private string _Name;
	
	private string _Weight;
	
	private System.Nullable<int> _UserId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPetIdChanging(int value);
    partial void OnPetIdChanged();
    partial void OnPetTypeIdChanging(System.Nullable<int> value);
    partial void OnPetTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
	
	public tblPet()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PetId
	{
		get
		{
			return this._PetId;
		}
		set
		{
			if ((this._PetId != value))
			{
				this.OnPetIdChanging(value);
				this.SendPropertyChanging();
				this._PetId = value;
				this.SendPropertyChanged("PetId");
				this.OnPetIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetTypeId", DbType="Int")]
	public System.Nullable<int> PetTypeId
	{
		get
		{
			return this._PetTypeId;
		}
		set
		{
			if ((this._PetTypeId != value))
			{
				this.OnPetTypeIdChanging(value);
				this.SendPropertyChanging();
				this._PetTypeId = value;
				this.SendPropertyChanged("PetTypeId");
				this.OnPetTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="VarChar(50)")]
	public string Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPetType")]
public partial class tblPetType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PetTypeId;
	
	private string _TypeName;
	
	private System.Nullable<int> _ParentTypeId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPetTypeIdChanging(int value);
    partial void OnPetTypeIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnParentTypeIdChanging(System.Nullable<int> value);
    partial void OnParentTypeIdChanged();
    #endregion
	
	public tblPetType()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PetTypeId
	{
		get
		{
			return this._PetTypeId;
		}
		set
		{
			if ((this._PetTypeId != value))
			{
				this.OnPetTypeIdChanging(value);
				this.SendPropertyChanging();
				this._PetTypeId = value;
				this.SendPropertyChanged("PetTypeId");
				this.OnPetTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(50)")]
	public string TypeName
	{
		get
		{
			return this._TypeName;
		}
		set
		{
			if ((this._TypeName != value))
			{
				this.OnTypeNameChanging(value);
				this.SendPropertyChanging();
				this._TypeName = value;
				this.SendPropertyChanged("TypeName");
				this.OnTypeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTypeId", DbType="Int")]
	public System.Nullable<int> ParentTypeId
	{
		get
		{
			return this._ParentTypeId;
		}
		set
		{
			if ((this._ParentTypeId != value))
			{
				this.OnParentTypeIdChanging(value);
				this.SendPropertyChanging();
				this._ParentTypeId = value;
				this.SendPropertyChanged("ParentTypeId");
				this.OnParentTypeIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCart")]
public partial class tblCart : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CartId;
	
	private string _MacAddress;
	
	private string _Qty;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<int> _ProductId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCartIdChanging(int value);
    partial void OnCartIdChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    partial void OnQtyChanging(string value);
    partial void OnQtyChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnProductIdChanging(System.Nullable<int> value);
    partial void OnProductIdChanged();
    #endregion
	
	public tblCart()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CartId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CartId
	{
		get
		{
			return this._CartId;
		}
		set
		{
			if ((this._CartId != value))
			{
				this.OnCartIdChanging(value);
				this.SendPropertyChanging();
				this._CartId = value;
				this.SendPropertyChanged("CartId");
				this.OnCartIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="VarChar(MAX)")]
	public string MacAddress
	{
		get
		{
			return this._MacAddress;
		}
		set
		{
			if ((this._MacAddress != value))
			{
				this.OnMacAddressChanging(value);
				this.SendPropertyChanging();
				this._MacAddress = value;
				this.SendPropertyChanged("MacAddress");
				this.OnMacAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="VarChar(10)")]
	public string Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
	public System.Nullable<int> ProductId
	{
		get
		{
			return this._ProductId;
		}
		set
		{
			if ((this._ProductId != value))
			{
				this.OnProductIdChanging(value);
				this.SendPropertyChanging();
				this._ProductId = value;
				this.SendPropertyChanged("ProductId");
				this.OnProductIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserId;
	
	private string _FName;
	
	private string _MName;
	
	private string _LName;
	
	private string _ContactNo;
	
	private string _Email;
	
	private string _Password;
	
	private string _Gender;
	
	private System.Nullable<System.DateTime> _DOB;
	
	private string _Image;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private string _MacAddress;
	
	private System.Nullable<bool> _IsBusiness;
	
	private System.Nullable<int> _BusinessId;
	
	private System.Nullable<bool> _IsBlocked;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnMNameChanging(string value);
    partial void OnMNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    partial void OnIsBusinessChanging(System.Nullable<bool> value);
    partial void OnIsBusinessChanged();
    partial void OnBusinessIdChanging(System.Nullable<int> value);
    partial void OnBusinessIdChanged();
    partial void OnIsBlockedChanging(System.Nullable<bool> value);
    partial void OnIsBlockedChanged();
    #endregion
	
	public tblUser()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(50)")]
	public string FName
	{
		get
		{
			return this._FName;
		}
		set
		{
			if ((this._FName != value))
			{
				this.OnFNameChanging(value);
				this.SendPropertyChanging();
				this._FName = value;
				this.SendPropertyChanged("FName");
				this.OnFNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MName", DbType="VarChar(50)")]
	public string MName
	{
		get
		{
			return this._MName;
		}
		set
		{
			if ((this._MName != value))
			{
				this.OnMNameChanging(value);
				this.SendPropertyChanging();
				this._MName = value;
				this.SendPropertyChanged("MName");
				this.OnMNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="VarChar(50)")]
	public string LName
	{
		get
		{
			return this._LName;
		}
		set
		{
			if ((this._LName != value))
			{
				this.OnLNameChanging(value);
				this.SendPropertyChanging();
				this._LName = value;
				this.SendPropertyChanged("LName");
				this.OnLNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50)")]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
	public System.Nullable<System.DateTime> DOB
	{
		get
		{
			return this._DOB;
		}
		set
		{
			if ((this._DOB != value))
			{
				this.OnDOBChanging(value);
				this.SendPropertyChanging();
				this._DOB = value;
				this.SendPropertyChanged("DOB");
				this.OnDOBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(50)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="VarChar(MAX)")]
	public string MacAddress
	{
		get
		{
			return this._MacAddress;
		}
		set
		{
			if ((this._MacAddress != value))
			{
				this.OnMacAddressChanging(value);
				this.SendPropertyChanging();
				this._MacAddress = value;
				this.SendPropertyChanged("MacAddress");
				this.OnMacAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBusiness", DbType="Bit")]
	public System.Nullable<bool> IsBusiness
	{
		get
		{
			return this._IsBusiness;
		}
		set
		{
			if ((this._IsBusiness != value))
			{
				this.OnIsBusinessChanging(value);
				this.SendPropertyChanging();
				this._IsBusiness = value;
				this.SendPropertyChanged("IsBusiness");
				this.OnIsBusinessChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessId", DbType="Int")]
	public System.Nullable<int> BusinessId
	{
		get
		{
			return this._BusinessId;
		}
		set
		{
			if ((this._BusinessId != value))
			{
				this.OnBusinessIdChanging(value);
				this.SendPropertyChanging();
				this._BusinessId = value;
				this.SendPropertyChanged("BusinessId");
				this.OnBusinessIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit")]
	public System.Nullable<bool> IsBlocked
	{
		get
		{
			return this._IsBlocked;
		}
		set
		{
			if ((this._IsBlocked != value))
			{
				this.OnIsBlockedChanging(value);
				this.SendPropertyChanging();
				this._IsBlocked = value;
				this.SendPropertyChanged("IsBlocked");
				this.OnIsBlockedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrder")]
public partial class tblOrder : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderId;
	
	private System.Nullable<int> _UserId;
	
	private string _Amt;
	
	private string _CGST;
	
	private string _SGST;
	
	private System.Nullable<int> _AddressId;
	
	private string _PaymentType;
	
	private string _BankName;
	
	private string _TransNo;
	
	private System.Nullable<bool> _IsPaid;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnAmtChanging(string value);
    partial void OnAmtChanged();
    partial void OnCGSTChanging(string value);
    partial void OnCGSTChanged();
    partial void OnSGSTChanging(string value);
    partial void OnSGSTChanged();
    partial void OnAddressIdChanging(System.Nullable<int> value);
    partial void OnAddressIdChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnTransNoChanging(string value);
    partial void OnTransNoChanged();
    partial void OnIsPaidChanging(System.Nullable<bool> value);
    partial void OnIsPaidChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblOrder()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OrderId
	{
		get
		{
			return this._OrderId;
		}
		set
		{
			if ((this._OrderId != value))
			{
				this.OnOrderIdChanging(value);
				this.SendPropertyChanging();
				this._OrderId = value;
				this.SendPropertyChanged("OrderId");
				this.OnOrderIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amt", DbType="VarChar(50)")]
	public string Amt
	{
		get
		{
			return this._Amt;
		}
		set
		{
			if ((this._Amt != value))
			{
				this.OnAmtChanging(value);
				this.SendPropertyChanging();
				this._Amt = value;
				this.SendPropertyChanged("Amt");
				this.OnAmtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CGST", DbType="VarChar(50)")]
	public string CGST
	{
		get
		{
			return this._CGST;
		}
		set
		{
			if ((this._CGST != value))
			{
				this.OnCGSTChanging(value);
				this.SendPropertyChanging();
				this._CGST = value;
				this.SendPropertyChanged("CGST");
				this.OnCGSTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SGST", DbType="VarChar(50)")]
	public string SGST
	{
		get
		{
			return this._SGST;
		}
		set
		{
			if ((this._SGST != value))
			{
				this.OnSGSTChanging(value);
				this.SendPropertyChanging();
				this._SGST = value;
				this.SendPropertyChanged("SGST");
				this.OnSGSTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", DbType="Int")]
	public System.Nullable<int> AddressId
	{
		get
		{
			return this._AddressId;
		}
		set
		{
			if ((this._AddressId != value))
			{
				this.OnAddressIdChanging(value);
				this.SendPropertyChanging();
				this._AddressId = value;
				this.SendPropertyChanged("AddressId");
				this.OnAddressIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="VarChar(50)")]
	public string PaymentType
	{
		get
		{
			return this._PaymentType;
		}
		set
		{
			if ((this._PaymentType != value))
			{
				this.OnPaymentTypeChanging(value);
				this.SendPropertyChanging();
				this._PaymentType = value;
				this.SendPropertyChanged("PaymentType");
				this.OnPaymentTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50)")]
	public string BankName
	{
		get
		{
			return this._BankName;
		}
		set
		{
			if ((this._BankName != value))
			{
				this.OnBankNameChanging(value);
				this.SendPropertyChanging();
				this._BankName = value;
				this.SendPropertyChanged("BankName");
				this.OnBankNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransNo", DbType="VarChar(MAX)")]
	public string TransNo
	{
		get
		{
			return this._TransNo;
		}
		set
		{
			if ((this._TransNo != value))
			{
				this.OnTransNoChanging(value);
				this.SendPropertyChanging();
				this._TransNo = value;
				this.SendPropertyChanged("TransNo");
				this.OnTransNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit")]
	public System.Nullable<bool> IsPaid
	{
		get
		{
			return this._IsPaid;
		}
		set
		{
			if ((this._IsPaid != value))
			{
				this.OnIsPaidChanging(value);
				this.SendPropertyChanging();
				this._IsPaid = value;
				this.SendPropertyChanged("IsPaid");
				this.OnIsPaidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountryMaster")]
public partial class CountryMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _CountryCode;
	
	private EntitySet<StateMaster> _StateMasters;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    #endregion
	
	public CountryMaster()
	{
		this._StateMasters = new EntitySet<StateMaster>(new Action<StateMaster>(this.attach_StateMasters), new Action<StateMaster>(this.detach_StateMasters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(5)")]
	public string CountryCode
	{
		get
		{
			return this._CountryCode;
		}
		set
		{
			if ((this._CountryCode != value))
			{
				this.OnCountryCodeChanging(value);
				this.SendPropertyChanging();
				this._CountryCode = value;
				this.SendPropertyChanged("CountryCode");
				this.OnCountryCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_StateMaster", Storage="_StateMasters", ThisKey="ID", OtherKey="CountryID")]
	public EntitySet<StateMaster> StateMasters
	{
		get
		{
			return this._StateMasters;
		}
		set
		{
			this._StateMasters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_StateMasters(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = this;
	}
	
	private void detach_StateMasters(StateMaster entity)
	{
		this.SendPropertyChanging();
		entity.CountryMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StateMaster")]
public partial class StateMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<int> _CountryID;
	
	private EntitySet<CityMaster> _CityMasters;
	
	private EntityRef<CountryMaster> _CountryMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    #endregion
	
	public StateMaster()
	{
		this._CityMasters = new EntitySet<CityMaster>(new Action<CityMaster>(this.attach_CityMasters), new Action<CityMaster>(this.detach_CityMasters));
		this._CountryMaster = default(EntityRef<CountryMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
	public System.Nullable<int> CountryID
	{
		get
		{
			return this._CountryID;
		}
		set
		{
			if ((this._CountryID != value))
			{
				if (this._CountryMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCountryIDChanging(value);
				this.SendPropertyChanging();
				this._CountryID = value;
				this.SendPropertyChanged("CountryID");
				this.OnCountryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CityMaster", Storage="_CityMasters", ThisKey="ID", OtherKey="StateID")]
	public EntitySet<CityMaster> CityMasters
	{
		get
		{
			return this._CityMasters;
		}
		set
		{
			this._CityMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryMaster_StateMaster", Storage="_CountryMaster", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
	public CountryMaster CountryMaster
	{
		get
		{
			return this._CountryMaster.Entity;
		}
		set
		{
			CountryMaster previousValue = this._CountryMaster.Entity;
			if (((previousValue != value) 
						|| (this._CountryMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CountryMaster.Entity = null;
					previousValue.StateMasters.Remove(this);
				}
				this._CountryMaster.Entity = value;
				if ((value != null))
				{
					value.StateMasters.Add(this);
					this._CountryID = value.ID;
				}
				else
				{
					this._CountryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("CountryMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = this;
	}
	
	private void detach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityMaster")]
public partial class CityMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<int> _StateID;
	
	private EntityRef<StateMaster> _StateMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    #endregion
	
	public CityMaster()
	{
		this._StateMaster = default(EntityRef<StateMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
	public System.Nullable<int> StateID
	{
		get
		{
			return this._StateID;
		}
		set
		{
			if ((this._StateID != value))
			{
				if (this._StateMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStateIDChanging(value);
				this.SendPropertyChanging();
				this._StateID = value;
				this.SendPropertyChanged("StateID");
				this.OnStateIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CityMaster", Storage="_StateMaster", ThisKey="StateID", OtherKey="ID", IsForeignKey=true)]
	public StateMaster StateMaster
	{
		get
		{
			return this._StateMaster.Entity;
		}
		set
		{
			StateMaster previousValue = this._StateMaster.Entity;
			if (((previousValue != value) 
						|| (this._StateMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StateMaster.Entity = null;
					previousValue.CityMasters.Remove(this);
				}
				this._StateMaster.Entity = value;
				if ((value != null))
				{
					value.CityMasters.Add(this);
					this._StateID = value.ID;
				}
				else
				{
					this._StateID = default(Nullable<int>);
				}
				this.SendPropertyChanged("StateMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAddress")]
public partial class tblAddress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AddressId;
	
	private string _Address;
	
	private string _Landmark;
	
	private string _Area;
	
	private string _Pincode;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<int> _CityId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIdChanging(int value);
    partial void OnAddressIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnLandmarkChanging(string value);
    partial void OnLandmarkChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnPincodeChanging(string value);
    partial void OnPincodeChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnCityIdChanging(System.Nullable<int> value);
    partial void OnCityIdChanged();
    #endregion
	
	public tblAddress()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AddressId
	{
		get
		{
			return this._AddressId;
		}
		set
		{
			if ((this._AddressId != value))
			{
				this.OnAddressIdChanging(value);
				this.SendPropertyChanging();
				this._AddressId = value;
				this.SendPropertyChanged("AddressId");
				this.OnAddressIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Landmark", DbType="VarChar(50)")]
	public string Landmark
	{
		get
		{
			return this._Landmark;
		}
		set
		{
			if ((this._Landmark != value))
			{
				this.OnLandmarkChanging(value);
				this.SendPropertyChanging();
				this._Landmark = value;
				this.SendPropertyChanged("Landmark");
				this.OnLandmarkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="VarChar(50)")]
	public string Area
	{
		get
		{
			return this._Area;
		}
		set
		{
			if ((this._Area != value))
			{
				this.OnAreaChanging(value);
				this.SendPropertyChanging();
				this._Area = value;
				this.SendPropertyChanged("Area");
				this.OnAreaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pincode", DbType="VarChar(10)")]
	public string Pincode
	{
		get
		{
			return this._Pincode;
		}
		set
		{
			if ((this._Pincode != value))
			{
				this.OnPincodeChanging(value);
				this.SendPropertyChanging();
				this._Pincode = value;
				this.SendPropertyChanged("Pincode");
				this.OnPincodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
	public System.Nullable<int> CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				this.OnCityIdChanging(value);
				this.SendPropertyChanging();
				this._CityId = value;
				this.SendPropertyChanged("CityId");
				this.OnCityIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNewsLetter")]
public partial class tblNewsLetter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _NewsLetterId;
	
	private string _Email;
	
	private System.Nullable<System.DateTime> _SubscribedDate;
	
	private System.Nullable<System.DateTime> _UnsubscribedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsLetterIdChanging(int value);
    partial void OnNewsLetterIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSubscribedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubscribedDateChanged();
    partial void OnUnsubscribedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUnsubscribedDateChanged();
    #endregion
	
	public tblNewsLetter()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsLetterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int NewsLetterId
	{
		get
		{
			return this._NewsLetterId;
		}
		set
		{
			if ((this._NewsLetterId != value))
			{
				this.OnNewsLetterIdChanging(value);
				this.SendPropertyChanging();
				this._NewsLetterId = value;
				this.SendPropertyChanged("NewsLetterId");
				this.OnNewsLetterIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscribedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SubscribedDate
	{
		get
		{
			return this._SubscribedDate;
		}
		set
		{
			if ((this._SubscribedDate != value))
			{
				this.OnSubscribedDateChanging(value);
				this.SendPropertyChanging();
				this._SubscribedDate = value;
				this.SendPropertyChanged("SubscribedDate");
				this.OnSubscribedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnsubscribedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UnsubscribedDate
	{
		get
		{
			return this._UnsubscribedDate;
		}
		set
		{
			if ((this._UnsubscribedDate != value))
			{
				this.OnUnsubscribedDateChanging(value);
				this.SendPropertyChanging();
				this._UnsubscribedDate = value;
				this.SendPropertyChanged("UnsubscribedDate");
				this.OnUnsubscribedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBusiness")]
public partial class tblBusiness : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BusinessId;
	
	private System.Nullable<int> _UserId;
	
	private string _Title;
	
	private string _GSTNo;
	
	private System.Nullable<int> _AddressId;
	
	private System.Nullable<int> _AlbumId;
	
	private string _ContactNo;
	
	private string _Email;
	
	private string _WebURL;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessIdChanging(int value);
    partial void OnBusinessIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnGSTNoChanging(string value);
    partial void OnGSTNoChanged();
    partial void OnAddressIdChanging(System.Nullable<int> value);
    partial void OnAddressIdChanged();
    partial void OnAlbumIdChanging(System.Nullable<int> value);
    partial void OnAlbumIdChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebURLChanging(string value);
    partial void OnWebURLChanged();
    #endregion
	
	public tblBusiness()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BusinessId
	{
		get
		{
			return this._BusinessId;
		}
		set
		{
			if ((this._BusinessId != value))
			{
				this.OnBusinessIdChanging(value);
				this.SendPropertyChanging();
				this._BusinessId = value;
				this.SendPropertyChanged("BusinessId");
				this.OnBusinessIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSTNo", DbType="VarChar(50)")]
	public string GSTNo
	{
		get
		{
			return this._GSTNo;
		}
		set
		{
			if ((this._GSTNo != value))
			{
				this.OnGSTNoChanging(value);
				this.SendPropertyChanging();
				this._GSTNo = value;
				this.SendPropertyChanged("GSTNo");
				this.OnGSTNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", DbType="Int")]
	public System.Nullable<int> AddressId
	{
		get
		{
			return this._AddressId;
		}
		set
		{
			if ((this._AddressId != value))
			{
				this.OnAddressIdChanging(value);
				this.SendPropertyChanging();
				this._AddressId = value;
				this.SendPropertyChanged("AddressId");
				this.OnAddressIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="Int")]
	public System.Nullable<int> AlbumId
	{
		get
		{
			return this._AlbumId;
		}
		set
		{
			if ((this._AlbumId != value))
			{
				this.OnAlbumIdChanging(value);
				this.SendPropertyChanging();
				this._AlbumId = value;
				this.SendPropertyChanged("AlbumId");
				this.OnAlbumIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50)")]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebURL", DbType="VarChar(MAX)")]
	public string WebURL
	{
		get
		{
			return this._WebURL;
		}
		set
		{
			if ((this._WebURL != value))
			{
				this.OnWebURLChanging(value);
				this.SendPropertyChanging();
				this._WebURL = value;
				this.SendPropertyChanged("WebURL");
				this.OnWebURLChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrderDetail")]
public partial class tblOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderDetailId;
	
	private System.Nullable<int> _OrderId;
	
	private System.Nullable<int> _ProductId;
	
	private string _Qty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderDetailIdChanging(int value);
    partial void OnOrderDetailIdChanged();
    partial void OnOrderIdChanging(System.Nullable<int> value);
    partial void OnOrderIdChanged();
    partial void OnProductIdChanging(System.Nullable<int> value);
    partial void OnProductIdChanged();
    partial void OnQtyChanging(string value);
    partial void OnQtyChanged();
    #endregion
	
	public tblOrderDetail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OrderDetailId
	{
		get
		{
			return this._OrderDetailId;
		}
		set
		{
			if ((this._OrderDetailId != value))
			{
				this.OnOrderDetailIdChanging(value);
				this.SendPropertyChanging();
				this._OrderDetailId = value;
				this.SendPropertyChanged("OrderDetailId");
				this.OnOrderDetailIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int")]
	public System.Nullable<int> OrderId
	{
		get
		{
			return this._OrderId;
		}
		set
		{
			if ((this._OrderId != value))
			{
				this.OnOrderIdChanging(value);
				this.SendPropertyChanging();
				this._OrderId = value;
				this.SendPropertyChanged("OrderId");
				this.OnOrderIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
	public System.Nullable<int> ProductId
	{
		get
		{
			return this._ProductId;
		}
		set
		{
			if ((this._ProductId != value))
			{
				this.OnProductIdChanging(value);
				this.SendPropertyChanging();
				this._ProductId = value;
				this.SendPropertyChanged("ProductId");
				this.OnProductIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="VarChar(50)")]
	public string Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEventXUser")]
public partial class tblEventXUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EventXUserId;
	
	private System.Nullable<int> _EventId;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<bool> _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventXUserIdChanging(int value);
    partial void OnEventXUserIdChanged();
    partial void OnEventIdChanging(System.Nullable<int> value);
    partial void OnEventIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
	
	public tblEventXUser()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventXUserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EventXUserId
	{
		get
		{
			return this._EventXUserId;
		}
		set
		{
			if ((this._EventXUserId != value))
			{
				this.OnEventXUserIdChanging(value);
				this.SendPropertyChanging();
				this._EventXUserId = value;
				this.SendPropertyChanged("EventXUserId");
				this.OnEventXUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int")]
	public System.Nullable<int> EventId
	{
		get
		{
			return this._EventId;
		}
		set
		{
			if ((this._EventId != value))
			{
				this.OnEventIdChanging(value);
				this.SendPropertyChanging();
				this._EventId = value;
				this.SendPropertyChanged("EventId");
				this.OnEventIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProduct")]
public partial class tblProduct : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductId;
	
	private string _Name;
	
	private string _Desc;
	
	private string _ModelNo;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<int> _AlbumId;
	
	private System.Nullable<int> _CategoryId;
	
	private System.Nullable<System.DateTime> _MfdDate;
	
	private System.Nullable<System.DateTime> _ExpDate;
	
	private System.Nullable<bool> _IsFood;
	
	private System.Nullable<bool> _IsAccessory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnAlbumIdChanging(System.Nullable<int> value);
    partial void OnAlbumIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnMfdDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMfdDateChanged();
    partial void OnExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpDateChanged();
    partial void OnIsFoodChanging(System.Nullable<bool> value);
    partial void OnIsFoodChanged();
    partial void OnIsAccessoryChanging(System.Nullable<bool> value);
    partial void OnIsAccessoryChanged();
    #endregion
	
	public tblProduct()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductId
	{
		get
		{
			return this._ProductId;
		}
		set
		{
			if ((this._ProductId != value))
			{
				this.OnProductIdChanging(value);
				this.SendPropertyChanging();
				this._ProductId = value;
				this.SendPropertyChanged("ProductId");
				this.OnProductIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="VarChar(MAX)")]
	public string Desc
	{
		get
		{
			return this._Desc;
		}
		set
		{
			if ((this._Desc != value))
			{
				this.OnDescChanging(value);
				this.SendPropertyChanging();
				this._Desc = value;
				this.SendPropertyChanged("Desc");
				this.OnDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNo", DbType="VarChar(MAX)")]
	public string ModelNo
	{
		get
		{
			return this._ModelNo;
		}
		set
		{
			if ((this._ModelNo != value))
			{
				this.OnModelNoChanging(value);
				this.SendPropertyChanging();
				this._ModelNo = value;
				this.SendPropertyChanged("ModelNo");
				this.OnModelNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", DbType="Int")]
	public System.Nullable<int> AlbumId
	{
		get
		{
			return this._AlbumId;
		}
		set
		{
			if ((this._AlbumId != value))
			{
				this.OnAlbumIdChanging(value);
				this.SendPropertyChanging();
				this._AlbumId = value;
				this.SendPropertyChanged("AlbumId");
				this.OnAlbumIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
	public System.Nullable<int> CategoryId
	{
		get
		{
			return this._CategoryId;
		}
		set
		{
			if ((this._CategoryId != value))
			{
				this.OnCategoryIdChanging(value);
				this.SendPropertyChanging();
				this._CategoryId = value;
				this.SendPropertyChanged("CategoryId");
				this.OnCategoryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MfdDate", DbType="Date")]
	public System.Nullable<System.DateTime> MfdDate
	{
		get
		{
			return this._MfdDate;
		}
		set
		{
			if ((this._MfdDate != value))
			{
				this.OnMfdDateChanging(value);
				this.SendPropertyChanging();
				this._MfdDate = value;
				this.SendPropertyChanged("MfdDate");
				this.OnMfdDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="Date")]
	public System.Nullable<System.DateTime> ExpDate
	{
		get
		{
			return this._ExpDate;
		}
		set
		{
			if ((this._ExpDate != value))
			{
				this.OnExpDateChanging(value);
				this.SendPropertyChanging();
				this._ExpDate = value;
				this.SendPropertyChanged("ExpDate");
				this.OnExpDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFood", DbType="Bit")]
	public System.Nullable<bool> IsFood
	{
		get
		{
			return this._IsFood;
		}
		set
		{
			if ((this._IsFood != value))
			{
				this.OnIsFoodChanging(value);
				this.SendPropertyChanging();
				this._IsFood = value;
				this.SendPropertyChanged("IsFood");
				this.OnIsFoodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccessory", DbType="Bit")]
	public System.Nullable<bool> IsAccessory
	{
		get
		{
			return this._IsAccessory;
		}
		set
		{
			if ((this._IsAccessory != value))
			{
				this.OnIsAccessoryChanging(value);
				this.SendPropertyChanging();
				this._IsAccessory = value;
				this.SendPropertyChanged("IsAccessory");
				this.OnIsAccessoryChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRating")]
public partial class tblRating : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RatingId;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<int> _ProductId;
	
	private System.Nullable<int> _Rating;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingIdChanging(int value);
    partial void OnRatingIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnProductIdChanging(System.Nullable<int> value);
    partial void OnProductIdChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    #endregion
	
	public tblRating()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RatingId
	{
		get
		{
			return this._RatingId;
		}
		set
		{
			if ((this._RatingId != value))
			{
				this.OnRatingIdChanging(value);
				this.SendPropertyChanging();
				this._RatingId = value;
				this.SendPropertyChanged("RatingId");
				this.OnRatingIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
	public System.Nullable<int> ProductId
	{
		get
		{
			return this._ProductId;
		}
		set
		{
			if ((this._ProductId != value))
			{
				this.OnProductIdChanging(value);
				this.SendPropertyChanging();
				this._ProductId = value;
				this.SendPropertyChanged("ProductId");
				this.OnProductIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
	public System.Nullable<int> Rating
	{
		get
		{
			return this._Rating;
		}
		set
		{
			if ((this._Rating != value))
			{
				this.OnRatingChanging(value);
				this.SendPropertyChanging();
				this._Rating = value;
				this.SendPropertyChanged("Rating");
				this.OnRatingChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblError")]
public partial class tblError : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ErrorId;
	
	private string _PageName;
	
	private string _MacAddress;
	
	private string _Description;
	
	private string _UserType;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<int> _AdminId;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIdChanging(int value);
    partial void OnErrorIdChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnMacAddressChanging(string value);
    partial void OnMacAddressChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnAdminIdChanging(System.Nullable<int> value);
    partial void OnAdminIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    #endregion
	
	public tblError()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ErrorId
	{
		get
		{
			return this._ErrorId;
		}
		set
		{
			if ((this._ErrorId != value))
			{
				this.OnErrorIdChanging(value);
				this.SendPropertyChanging();
				this._ErrorId = value;
				this.SendPropertyChanged("ErrorId");
				this.OnErrorIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="VarChar(50)")]
	public string PageName
	{
		get
		{
			return this._PageName;
		}
		set
		{
			if ((this._PageName != value))
			{
				this.OnPageNameChanging(value);
				this.SendPropertyChanging();
				this._PageName = value;
				this.SendPropertyChanged("PageName");
				this.OnPageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacAddress", DbType="VarChar(50)")]
	public string MacAddress
	{
		get
		{
			return this._MacAddress;
		}
		set
		{
			if ((this._MacAddress != value))
			{
				this.OnMacAddressChanging(value);
				this.SendPropertyChanging();
				this._MacAddress = value;
				this.SendPropertyChanged("MacAddress");
				this.OnMacAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(50)")]
	public string UserType
	{
		get
		{
			return this._UserType;
		}
		set
		{
			if ((this._UserType != value))
			{
				this.OnUserTypeChanging(value);
				this.SendPropertyChanging();
				this._UserType = value;
				this.SendPropertyChanged("UserType");
				this.OnUserTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", DbType="Int")]
	public System.Nullable<int> AdminId
	{
		get
		{
			return this._AdminId;
		}
		set
		{
			if ((this._AdminId != value))
			{
				this.OnAdminIdChanging(value);
				this.SendPropertyChanging();
				this._AdminId = value;
				this.SendPropertyChanged("AdminId");
				this.OnAdminIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
